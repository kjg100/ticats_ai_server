name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ap-northeast-2
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Build and push Docker image
      id: build-image
      run: |
        IMAGE_TAG=$(date +%Y%m%d%H%M)
        docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
        docker tag ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG ${{ secrets.ECR_REPOSITORY }}:latest
        docker push ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
        docker push ${{ secrets.ECR_REPOSITORY }}:latest
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
        docker pull ${{ secrets.ECR_REPOSITORY }}:latest
        docker-compose down
        docker-compose up -d
        EOF
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
